{"version":3,"sources":["Queries.js","ListProjects.js","ListTodos.js","Dialogues.js","App.js","serviceWorker.js","index.js"],"names":["Query","props","id","type","placeholder","onChange","handleChange","SortForm","style","display","className","name","value","checked","sortBy","htmlFor","ListProjects","projects","map","project","index","active","activeProject","handleActiveClick","editProject","handleClick","handleSwitchProject","Project","onClick","key","Date","now","toString","ProjectAdder","ListTodos","todos","todo","description","dueDate","priority","handleEditTodo","handleDelete","handleDeleteTodo","Todo","TodoAdder","ProjectDialogue","initialValues","validate","values","onSubmit","modifyProject","errors","handleSubmit","handleCancel","defaultProps","TodoDialogue","modifyTodo","min","max","list","App","React","useState","setProjects","setActiveProject","editingProject","setEditingProject","projectDialogue","setProjectDialogue","todoUnderEdit","setTodoUnderEdit","todoDialogue","setTodoDialogue","setSortBy","query","setQuery","update","newProjects","newActiveProject","localStorage","setItem","JSON","stringify","cancelEditProject","cancelEditTodo","slice","newProject","find","splice","indexOf","toggleProjectDialogue","toggleTodoDialogue","useEffect","parse","getItem","event","target","lowerCaseQuery","toLowerCase","filter","includes","filterTodos","sort","a","b","push","unshift","todoIndex","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3786db3b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Query = (props) =>\r\n    <input\r\n        id='query-box'\r\n        type='text'\r\n        placeholder='query'\r\n        onChange={props.handleChange}\r\n    />;\r\nexport const SortForm = (props) =>\r\n    <form>\r\n        <div style={{display: 'inline-block'}}>\r\n            <input\r\n                id='name'\r\n                className='sort'\r\n                type='radio'\r\n                name='sort-by'\r\n                value='name'\r\n                checked={props.sortBy === 'name'}\r\n                onChange={props.handleChange}\r\n            />\r\n            <label\r\n                className='sort'\r\n                htmlFor='name'\r\n            >\r\n                Name\r\n            </label>\r\n        </div>\r\n        <div style={{display: 'inline-block'}}>\r\n            <input\r\n                id='due-date'\r\n                className='sort'\r\n                type='radio'\r\n                name='sort-by'\r\n                value='dueDate'\r\n                checked={props.sortBy === 'dueDate'}\r\n                onChange={props.handleChange}\r\n            />\r\n            <label\r\n                className='sort'\r\n                htmlFor='due-date'\r\n            >\r\n                Due Date\r\n            </label>\r\n        </div>\r\n        <div style={{display: 'inline-block'}}>\r\n            <input\r\n                id='priority'\r\n                className='sort'\r\n                type='radio'\r\n                name='sort-by'\r\n                value='priority'\r\n                checked={props.sortBy === 'priority'}\r\n                onChange={props.handleChange}\r\n            />\r\n            <label\r\n                className='sort'\r\n                htmlFor='priority'\r\n            >\r\n                Priority\r\n            </label>\r\n        </div>\r\n    </form>;","import React from 'react';\r\n\r\nexport const ListProjects = (props) => props.projects.map((project, index) =>\r\n    <Project\r\n        active={project === props.activeProject}\r\n        name={project.name}\r\n        handleActiveClick={props.editProject}\r\n        handleClick={props.handleSwitchProject(project)}\r\n        index={index}\r\n    />);\r\nconst Project = (props) => props.active ?\r\n    <li\r\n        className='active'\r\n        onClick={props.handleActiveClick}\r\n        key={(Date.now() + props.index).toString(36)}\r\n    >\r\n        {props.name}\r\n    </li>\r\n    : <li\r\n        onClick={props.handleClick}\r\n        key={(Date.now() + props.index).toString(36)}\r\n    >\r\n        {props.name}\r\n    </li>;\r\nexport const ProjectAdder = (props) =>\r\n    <li\r\n        id='new-project'\r\n        onClick={props.handleClick}\r\n        key={(Date.now() - 1).toString(36)}\r\n    >\r\n        + project\r\n    </li>;","import React from 'react';\r\n\r\nexport const ListTodos = (props) => props.todos.map((todo, index) =>\r\n    <Todo\r\n        name={todo.name}\r\n        description={todo.description}\r\n        dueDate={todo.dueDate}\r\n        priority={todo.priority}\r\n        handleClick={props.handleEditTodo(todo)}\r\n        handleDelete={props.handleDeleteTodo(todo)}\r\n        index={index}\r\n    />);\r\nconst Todo = (props) =>\r\n    <li\r\n        className={'todo priority-' + props.priority}\r\n        key={(Date.now() + props.index).toString(36)}\r\n    >\r\n        <div className='delete' onClick={props.handleDelete}/>\r\n        <div\r\n            className='todo-body'\r\n            onClick={props.handleClick}\r\n        >\r\n            <div className='name'>{props.name}</div>\r\n            <div className='description'>{props.description}</div>\r\n            <div className='due-date'>{props.dueDate}</div>\r\n        </div>\r\n    </li>;\r\nexport const TodoAdder = (props) =>\r\n    <li\r\n        className='todo priority-5'\r\n        onClick={props.handleClick}\r\n        key={(Date.now() - 1).toString(36)}\r\n    >\r\n        + todo\r\n    </li>;","import {Formik} from 'formik';\r\nimport React from 'react';\r\n\r\nexport const ProjectDialogue = (props) =>\r\n    <div className='veil'>\r\n        <Formik\r\n            initialValues={{name: props.name}}\r\n            validate={values => values.name ? {} : {name: '^ name required'}}\r\n            onSubmit={values => props.modifyProject(values.name)}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  handleChange,\r\n                  handleSubmit,\r\n              }) => (\r\n                <form\r\n                    className='form'\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        placeholder='Project name'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                    />\r\n                    {errors.name}\r\n                    <button\r\n                        type='submit'\r\n                        className='submit'\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                    <button\r\n                        className='cancel'\r\n                        onClick={props.handleCancel}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>;\r\nProjectDialogue.defaultProps = {name: ''};\r\nexport const TodoDialogue = (props) =>\r\n    <div className='veil'>\r\n        <Formik\r\n            initialValues={{\r\n                name: props.name,\r\n                description: props.description,\r\n                dueDate: props.dueDate,\r\n                priority: props.priority,\r\n            }}\r\n            validate={values => {\r\n                const errors = {};\r\n                if (!values.name) errors.name = '^ name required';\r\n                if (!values.dueDate) errors.dueDate = '^ due date required';\r\n                if (values.priority < 1 || values.priority > 5) errors.priority = '^ priority must be between 1 and 5';\r\n                return errors;\r\n            }}\r\n            onSubmit={values => props.modifyTodo(values.name, values.description, values.dueDate, values.priority)}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  handleChange,\r\n                  handleSubmit,\r\n              }) => (\r\n                <form\r\n                    className='form'\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <input\r\n                        type='text'\r\n                        name='name'\r\n                        placeholder='Name'\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                    />\r\n                    {errors.name}\r\n                    <textarea\r\n                        name='description'\r\n                        placeholder='Description'\r\n                        onChange={handleChange}\r\n                        value={values.description}\r\n                    />\r\n                    <input\r\n                        type='date'\r\n                        name='dueDate'\r\n                        onChange={handleChange}\r\n                        value={values.dueDate}\r\n                    />\r\n                    {errors.dueDate}\r\n                    <input\r\n                        type='number'\r\n                        min={1}\r\n                        max={5}\r\n                        name='priority'\r\n                        onChange={handleChange}\r\n                        value={values.priority}\r\n                    />\r\n                    {errors.priority}\r\n                    <button\r\n                        type='submit'\r\n                        className='submit'\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                    <button\r\n                        className='cancel'\r\n                        onClick={props.handleCancel}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>;\r\nTodoDialogue.defaultProps = {name: '', description: '', dueDate: '', priority: 3};","import React from 'react';\r\nimport './App.css';\r\nimport {Query, SortForm} from './Queries';\r\nimport {ListProjects, ProjectAdder} from './ListProjects';\r\nimport {ListTodos, TodoAdder} from './ListTodos';\r\nimport {ProjectDialogue, TodoDialogue} from './Dialogues';\r\n\r\nconst project = (name) => ({name, list: []});\r\nconst todo = (name, description, dueDate, priority) => ({name, description, dueDate, priority});\r\n\r\nconst App = () => {\r\n    const [projects, setProjects] = React.useState([]);\r\n    const [activeProject, setActiveProject] = React.useState(null);\r\n    const [editingProject, setEditingProject] = React.useState(false);\r\n    const [projectDialogue, setProjectDialogue] = React.useState(false);\r\n    const [todoUnderEdit, setTodoUnderEdit] = React.useState(null);\r\n    const [todoDialogue, setTodoDialogue] = React.useState(false);\r\n    const [sortBy, setSortBy] = React.useState('name');\r\n    const [query, setQuery] = React.useState('');\r\n\r\n    const handleSortChange = (event) => setSortBy(event.target.value);\r\n    const handleQueryChange = (event) => setQuery(event.target.value);\r\n    const filterTodos = () => {\r\n        const lowerCaseQuery = query.toLowerCase();\r\n        return activeProject.list.filter(todo =>\r\n            todo.name.toLowerCase().includes(lowerCaseQuery)\r\n            || todo.description.toLowerCase().includes(lowerCaseQuery));\r\n    };\r\n\r\n    const update = (newProjects, newActiveProject) => {\r\n        setProjects(newProjects);\r\n        setActiveProject(newActiveProject);\r\n        localStorage.setItem('projects', JSON.stringify(projects));\r\n    };\r\n\r\n    const editProject = () => setEditingProject(true);\r\n    const cancelEditProject = () => setEditingProject(false);\r\n    const addProject = (name) => {\r\n        const newProjects = projects.slice();\r\n        const newProject = project(name);\r\n        newProjects.push(newProject);\r\n        update(newProjects, newProject);\r\n        toggleProjectDialogue();\r\n    };\r\n    const updateProject = (name) => {\r\n        const newProjects = projects.slice();\r\n        const newProject = newProjects.find(project => project === activeProject);\r\n        newProject.name = name;\r\n        update(newProjects, newProject);\r\n        cancelEditProject();\r\n    };\r\n    const handleSwitchProject = project => () => setActiveProject(project);\r\n    const deleteProject = () => {\r\n        const newProjects = projects.slice();\r\n        newProjects.splice(newProjects.indexOf(activeProject), 1);\r\n        update(newProjects, null);\r\n    };\r\n\r\n    const handleEditTodo = todo => () => setTodoUnderEdit(todo);\r\n    const cancelEditTodo = () => setTodoUnderEdit(null);\r\n    const addTodo = (name, description, dueDate, priority) => {\r\n        const newProjects = projects.slice();\r\n        const newProject = newProjects.find(project => project === activeProject);\r\n        newProject.list.unshift(todo(name, description, dueDate, priority));\r\n        update(newProjects, newProject);\r\n        toggleTodoDialogue();\r\n    };\r\n    const updateTodo = (name, description, dueDate, priority) => {\r\n        const newProjects = projects.slice();\r\n        const newProject = newProjects.find(project => project === activeProject);\r\n        const todoIndex = newProject.list.indexOf(todoUnderEdit);\r\n        newProject.list[todoIndex] = todo(name, description, dueDate, priority);\r\n        update(newProjects, newProject);\r\n        cancelEditTodo();\r\n    };\r\n    const handleDeleteTodo = todo => () => {\r\n        const newProjects = projects.slice();\r\n        const newProject = newProjects.find(project => project === activeProject);\r\n        newProject.list.splice(newProject.list.indexOf(todo), 1);\r\n        update(newProjects, newProject);\r\n        cancelEditTodo();\r\n    };\r\n\r\n    const toggleProjectDialogue = () => setProjectDialogue(!projectDialogue);\r\n    const toggleTodoDialogue = () => setTodoDialogue(!todoDialogue);\r\n\r\n    React.useEffect(() => {\r\n        setProjects(JSON.parse(localStorage.getItem('projects')) || [project('Default')]);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div id='app-name'>To-do</div>\r\n                <nav>\r\n                    <ul>\r\n                        <ListProjects\r\n                            activeProject={activeProject}\r\n                            projects={projects}\r\n                            editProject={editProject}\r\n                            handleSwitchProject={handleSwitchProject}\r\n                        />\r\n                        <ProjectAdder handleClick={toggleProjectDialogue}/>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <div id='queries'>\r\n                    <SortForm\r\n                        sortBy={sortBy}\r\n                        handleChange={handleSortChange}\r\n                    />\r\n                    <Query handleChange={handleQueryChange}/>\r\n                </div>\r\n                <ul>\r\n                    {activeProject\r\n                    && (query ?\r\n                        <ListTodos\r\n                            todos={filterTodos().sort((a, b) => a[sortBy] < b[sortBy] ? -1 : 1)}\r\n                            handleEditTodo={handleEditTodo}\r\n                            handleDeleteTodo={handleDeleteTodo}\r\n                        />\r\n                        : <ListTodos\r\n                            todos={activeProject.list.sort((a, b) => a[sortBy] < b[sortBy] ? -1 : 1)}\r\n                            handleEditTodo={handleEditTodo}\r\n                            handleDeleteTodo={handleDeleteTodo}\r\n                        />)}\r\n                    {activeProject && !query && <TodoAdder handleClick={toggleTodoDialogue}/>}\r\n                </ul>\r\n                {activeProject\r\n                && !query\r\n                && <button\r\n                    id='delete-project'\r\n                    onClick={deleteProject}\r\n                >\r\n                    Delete project\r\n                </button>}\r\n            </main>\r\n            {projectDialogue && <ProjectDialogue\r\n                modifyProject={addProject}\r\n                handleCancel={toggleProjectDialogue}\r\n            />}\r\n            {editingProject && <ProjectDialogue\r\n                name={activeProject.name}\r\n                modifyProject={updateProject}\r\n                handleCancel={cancelEditProject}\r\n            />}\r\n            {todoDialogue && <TodoDialogue\r\n                modifyTodo={addTodo}\r\n                handleCancel={toggleTodoDialogue}\r\n            />}\r\n            {todoUnderEdit && <TodoDialogue\r\n                name={todoUnderEdit.name}\r\n                description={todoUnderEdit.description}\r\n                dueDate={todoUnderEdit.dueDate}\r\n                priority={todoUnderEdit.priority}\r\n                modifyTodo={updateTodo}\r\n                handleCancel={cancelEditTodo}\r\n            />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}